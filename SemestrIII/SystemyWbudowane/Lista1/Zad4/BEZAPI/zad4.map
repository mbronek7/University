Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              zad4.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              zad4.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
                              /tmp/ccAoTgeF.o (__umulhisi3)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(tolower.o)
                              zad4.o (tolower)

Allocating common symbols
Common symbol       size              file

String              0x64              zad4.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
LOAD zad4.o
LOAD /tmp/ccAoTgeF.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega328p.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5da
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6        0x0 zad4.o
 .text          0x00000000000000a6      0x38a /tmp/ccAoTgeF.o
                0x00000000000000a6                initUSART
                0x00000000000000c8                transmitByte
                0x00000000000000d6                receiveByte
                0x00000000000000e4                printString
                0x000000000000010a                readString
                0x000000000000015e                printByte
                0x00000000000001d0                printWord
                0x000000000000034c                printBinaryByte
                0x00000000000003a2                nibbleToHexCharacter
                0x00000000000003ae                printHexByte
                0x00000000000003e8                getNumber
 .text          0x0000000000000430        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000430        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000430        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000430        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000430        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(tolower.o)
                0x0000000000000430                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000430      0x178 zad4.o
                0x0000000000000430                main
 .text.libgcc.mul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000005a8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000005a8       0x1e /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000005a8                __umulhisi3
 .text.libgcc.div
                0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000005c6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .text.avr-libc
                0x00000000000005c6       0x10 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(tolower.o)
                0x00000000000005c6                tolower
                0x00000000000005d6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005d6        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x00000000000005d6                exit
                0x00000000000005d6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005d6        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005da                _etext = .

.data           0x0000000000800100      0x16c load address 0x00000000000005da
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x1 zad4.o
                0x0000000000800100                maxLength
 .data          0x0000000000800101        0x0 /tmp/ccAoTgeF.o
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(tolower.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800101      0x12a zad4.o
                0x0000000000800101                Size
                0x0000000000800103                MorseCodeForCharsAndDigits
 *(.rodata*)
 .rodata.str1.1
                0x000000000080022b       0x41 zad4.o
                                         0x48 (size before relaxing)
 *(.gnu.linkonce.d*)
                0x000000000080026c                . = ALIGN (0x2)
                0x000000000080026c                _edata = .
                0x000000000080026c                PROVIDE (__data_end, .)

.bss            0x000000000080026c       0x64
                0x000000000080026c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x000000000080026c        0x0 zad4.o
 .bss           0x000000000080026c        0x0 /tmp/ccAoTgeF.o
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x000000000080026c        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(tolower.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080026c       0x64 zad4.o
                0x000000000080026c                String
                0x00000000008002d0                PROVIDE (__bss_end, .)
                0x00000000000005da                __data_load_start = LOADADDR (.data)
                0x0000000000000746                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008002d0        0x0
                0x00000000008002d0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008002d0                PROVIDE (__noinit_end, .)
                0x00000000008002d0                _end = .
                0x00000000008002d0                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1278
 *(.stab)
 .stab          0x0000000000000000      0x870 zad4.o
 .stab          0x0000000000000870      0xa08 /tmp/ccAoTgeF.o
                                        0xbd0 (size before relaxing)

.stabstr        0x0000000000000000      0xe13
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe13 zad4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 zad4.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 /tmp/ccAoTgeF.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(zad4.elf elf32-avr)
LOAD linker stubs
